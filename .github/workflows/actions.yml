name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [next, qa, main]
    tags: ['v*']

jobs:
  tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v3
      - uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: environment.yml
          cache-environment-key: ${{ runner.os }}-env-${{ hashFiles('**/environment.yml') }}
          cache-downloads-key: ${{ runner.os }}-downloads-${{ hashFiles('**/environment.yml') }}
      - name: install
        run: |
          python -m pip install -e .
      - name: run unit tests
        run: |
          echo "running unit tests"
          xvfb-run --server-args="-screen 0 1920x1080x24" -a python -m pytest -m "not repodata" --cov=src --cov-report=xml --cov-report=term-missing
      - name: upload coverage to codecov
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true

  conda-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - uses: actions/checkout@v3
    - uses: mamba-org/setup-micromamba@v1
      with:
        condarc: |
          channels:
            - conda-forge
            - mantid/label/nightly
            - oncat
        environment-file: environment.yml
    - name: building python wheel
      shell: bash -l {0}
      run: |
        python -m build --wheel --no-isolation
    - name: build conda package
      shell: bash -l {0}
      run: |
        # set up environment
        cd conda.recipe
        echo "versioningit $(versioningit ../)"
        # build the package
        VERSION=$(versioningit ../) conda mambabuild --output-folder . .
        conda verify noarch/garnet*.tar.bz2
    - name: upload conda package to anaconda
      shell: bash -l {0}
      if: startsWith(github.ref, 'refs/tags/v')
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
        IS_RC: ${{ contains(github.ref, 'rc') }}
      run: |
        # label is main or rc depending on the tag-name
        CONDA_LABEL="main"
        if [ "${IS_RC}" = "true" ]; then CONDA_LABEL="rc"; fi
        echo pushing ${{ github.ref }} with label $CONDA_LABEL
        anaconda upload --label $CONDA_LABEL conda.recipe/noarch/garnet*.tar.bz2

  # gitlab still needs to be setup for deploy

  # trigger-deploy:
  #   runs-on: ubuntu-latest
  #   needs: [tests, conda-build]
  #   # only trigger deploys from protected branches and tags
  #   if: ${{github.ref_protected || github.ref_type == 'tag' }}
  #   steps:
  #     - name: Determine Environment
  #       uses: neutrons/branch-mapper@v2
  #       id: conda_env_name
  #       with:
  #         prefix: garnet

  #     - name: Trigger deploy
  #       id: trigger
  #       uses: eic/trigger-gitlab-ci@v2
  #       with:
  #         url: https://code.ornl.gov
  #         token: ${{ secrets.GITLAB_TRIGGER_TOKEN }}
  #         ref_name: main
  #         project_id: 7835
  #         variables: |
  #           PLAY="update"
  #           CONDA_ENV="${{ steps.conda_env_name.outputs.name }}"

  #     - name: Annotate commit
  #       uses: peter-evans/commit-comment@v2
  #       with:
  #         body: |
  #           Gitlab pipeline for ${{ steps.deployname.outputs.name }} has been submitted for this commit: ${{ steps.trigger.outputs.web_url }}
